{"version":3,"sources":["components/Canvas/Canvas.module.css","store/canvasState.js","store/toolState.js","tools/Tool.js","tools/Line.js","components/Canvas/Canvas.jsx","tools/Square.js","components/Toolbar/Toolbar.jsx","App.js","reportWebVitals.js","index.js","components/Toolbar/Toolbar.module.css"],"names":["module","exports","canvas","makeAutoObservable","this","getContext","clearRect","width","height","tool","Tool","ctx","destroyListener","onmousedown","onmousemove","onmouseup","Line","listen","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","e","mouseDown","currentX","pageX","target","offsetLeft","currentY","pageY","offsetTop","beginPath","moveTo","saved","toDataURL","drawLine","x","y","img","Image","src","onload","a","drawImage","lineTo","stroke","Canvas","observer","canvasRef","useRef","useEffect","canvasState","setCanvas","current","toolState","setTool","className","s","ref","drawPanel","Square","startX","startY","w","h","rect","Toolbar","toolbar","btn","onClick","lineBtn","squareBtn","clearCanvas","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a0d32c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__GwZr6\",\"drawPanel\":\"Canvas_drawPanel__25mBL\"};","import {makeAutoObservable} from \"mobx\";\r\n\r\nclass CanvasState {\r\n    canvas = null\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setCanvas(canvas) {\r\n        this.canvas = canvas\r\n    }\r\n\r\n    clearCanvas() {\r\n        let ctx = this.canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n}\r\n\r\nexport default new CanvasState();","import {makeAutoObservable} from \"mobx\";\r\n\r\nclass ToolState {\r\n    tool = null\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setTool(tool) {\r\n        this.tool = tool\r\n    }\r\n\r\n}\r\n\r\nexport default new ToolState();","export default class Tool{\r\n    constructor(canvas) {\r\n        this.canvas = canvas;\r\n        this.ctx =canvas.getContext('2d');\r\n        this.destroyListener();\r\n    }\r\n\r\n    destroyListener(){\r\n        this.canvas.onmousedown = null;\r\n        this.canvas.onmousemove = null;\r\n        this.canvas.onmouseup = null;\r\n    }\r\n}\r\n","import Tool from \"./Tool\";\r\n\r\nexport default class Line extends Tool {\r\n    constructor(canvas) {\r\n        super(canvas);\r\n        this.listen();\r\n    }\r\n\r\n    listen() {\r\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this);\r\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\r\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this);\r\n    }\r\n\r\n    mouseDownHandler(e) {\r\n        this.mouseDown = true\r\n        this.currentX = e.pageX - e.target.offsetLeft;\r\n        this.currentY = e.pageY - e.target.offsetTop;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.currentX, this.currentY);\r\n        this.saved = this.canvas.toDataURL();\r\n    }\r\n\r\n    mouseMoveHandler(e) {\r\n        if (this.mouseDown) {\r\n            this.drawLine(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\r\n        }\r\n    }\r\n\r\n    mouseUpHandler(e) {\r\n        this.mouseDown = false\r\n    }\r\n\r\n    drawLine(x, y) {\r\n        const img = new Image()\r\n        img.src = this.saved\r\n        img.onload = async function () {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.currentX, this.currentY);\r\n            this.ctx.lineTo(x, y);\r\n            this.ctx.stroke();\r\n        }.bind(this)\r\n    }\r\n\r\n}\r\n","import React, {useEffect, useRef} from 'react';\r\nimport s from './Canvas.module.css'\r\nimport {observer} from \"mobx-react-lite\";\r\nimport canvasState from \"../../store/canvasState\";\r\nimport toolState from '../../store/toolState';\r\nimport Line from \"../../tools/Line\";\r\n\r\nconst Canvas = observer(() => {\r\n    const canvasRef = useRef();\r\n\r\n    useEffect(() => {\r\n        canvasState.setCanvas(canvasRef.current);\r\n        toolState.setTool(new Line(canvasRef.current));\r\n    }, []);\r\n\r\n    return (\r\n        <div className={s.canvas}>\r\n            <canvas ref={canvasRef} className={s.drawPanel} width={1000} height={800}/>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Canvas;","import Tool from \"./Tool\";\r\n\r\nexport default class Square extends Tool {\r\n    constructor(canvas) {\r\n        super(canvas);\r\n        this.listen();\r\n    }\r\n\r\n    listen() {\r\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this);\r\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\r\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this);\r\n    }\r\n\r\n    mouseDownHandler(e) {\r\n        this.mouseDown = true;\r\n        this.ctx.beginPath();\r\n        this.startX = e.pageX - e.target.offsetLeft;\r\n        this.startY = e.pageY - e.target.offsetTop;\r\n        this.saved = this.canvas.toDataURL();\r\n    }\r\n\r\n    mouseMoveHandler(e) {\r\n        if (this.mouseDown) {\r\n            let currentX = e.pageX - e.target.offsetLeft;\r\n            let currentY = e.pageY - e.target.offsetTop;\r\n            let width = currentX - this.startX;\r\n            let height = currentY - this.startY;\r\n            this.drawLine(this.startX, this.startY, width, height);\r\n        }\r\n    }\r\n\r\n    mouseUpHandler(e) {\r\n        this.mouseDown = false;\r\n    }\r\n\r\n    drawLine(x, y, w, h) {\r\n        const img = new Image();\r\n        img.src = this.saved;\r\n        img.onload = () => {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.beginPath();\r\n            this.ctx.rect(x, y, w, h);\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport s from './Toolbar.module.css';\r\nimport toolState from '../../store/toolState';\r\nimport canvasState from \"../../store/canvasState\";\r\nimport Line from '../../tools/Line';\r\nimport Square from \"../../tools/Square\";\r\n\r\nconst Toolbar = () => {\r\n    return (\r\n        <div className={s.toolbar}>\r\n            <button className={s.btn} onClick={() => toolState.setTool(new Line(canvasState.canvas))}>\r\n                <div className={s.lineBtn}></div>\r\n            </button>\r\n            <button className={s.btn} onClick={() => toolState.setTool(new Square(canvasState.canvas))}>\r\n                <div className={s.squareBtn}></div>\r\n            </button>\r\n            <button className={s.btn} onClick={() => canvasState.clearCanvas()}>\r\n                <div>Clear</div>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toolbar;","import './App.css';\nimport Canvas from \"./components/Canvas/Canvas\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Toolbar/>\n            <Canvas/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__3QpeO\",\"btn\":\"Toolbar_btn__2rLOc\",\"lineBtn\":\"Toolbar_lineBtn__HpM3u\",\"squareBtn\":\"Toolbar_squareBtn__3UqTC\"};"],"sourceRoot":""}